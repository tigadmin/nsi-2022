{"remainingRequest":"/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/src/components/RestaurantHow2.vue?vue&type=template&id=5d4ce56f&scoped=true&","dependencies":[{"path":"/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/src/components/RestaurantHow2.vue","mtime":1660143963141},{"path":"/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1638891001077},{"path":"/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1638891197049},{"path":"/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1638891001077},{"path":"/Users/tigadmin/WEB/Webstorm-Projects/nsi-v5/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1638891197049}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxzZWN0aW9uIGNsYXNzPSJwYi01IHB0LTUiPgogIDxkaXYgY2xhc3M9InRleHQteHMtY2VudGVyIj4KICAgIDx2LWNvbnRhaW5lciBncmlkLWxpc3QtbWQgbGlnaHQgdGV4dC14cy1jZW50ZXI+CiAgICAgIDx2LWxheW91dCBhbGlnbi1jZW50ZXIgcm93IHdyYXA+CiAgICAgICAgPHYtZmxleCBtZDYgeHMxMj4KICAgICAgICAgIDx2LWltZwogICAgICAgICAgICBhc3BlY3QtcmF0aW89IjEiCiAgICAgICAgICAgIGNvbnRhaW4KICAgICAgICAgICAgbWF4LWhlaWdodD0iMjYwcHgiCiAgICAgICAgICAgIHNyYz0iQC9hc3NldHMvY29uc3VsdGF0aW9uMS5zdmciCiAgICAgICAgICA+PC92LWltZz4KICAgICAgICA8L3YtZmxleD4KICAgICAgICA8di1mbGV4IG1kNiBwYi01IHhzMTI+CiAgICAgICAgICA8di1jYXJkIGp1c3RpZnktY2VudGVyPgogICAgICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJoZWFkbGluZSIKICAgICAgICAgICAgICA+U1RFUCAxOiBDcmVhdGUgWW91ciBBY2NvdW50CiAgICAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICA8di1jYXJkLXRleHQgY2xhc3M9InN1YmhlYWRpbmcgZ3JleS0tdGV4dCB0ZXh0LS1kYXJrZW4tMSI+CiAgICAgICAgICAgICAgVGhlIGZpcnN0IHN0ZXAgaXMgdG8gY3JlYXRlIHlvdXIgYWNjb3VudC4gUmVnaXN0cmF0aW9uIGlzIEZSRUUKICAgICAgICAgICAgICBhbmQgYWxsb3dzIG91ciBVU0EgcHJvamVjdCBtYW5hZ2VycyB0byBzdGFydCB0aGUgb25ib2FyZGluZyBwcm9jZXNzLgogICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgPC92LWZsZXg+CgogICAgICAgIDx2LWZsZXggbWQ2IHhzMTI+CiAgICAgICAgICA8IS0tc3VwcHJlc3MgSHRtbFVua25vd25UYXJnZXQsIEh0bWxVbmtub3duVGFyZ2V0IC0tPgogICAgICAgICAgPHYtaW1nCiAgICAgICAgICAgIGFzcGVjdC1yYXRpbz0iMSIKICAgICAgICAgICAgY29udGFpbgogICAgICAgICAgICBtYXgtaGVpZ2h0PSIyNjBweCIKICAgICAgICAgICAgc3JjPSJAL2Fzc2V0cy9jb25zdWx0YXRpb24uc3ZnIgogICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgPC92LWZsZXg+CiAgICAgICAgPHYtZmxleCBtZDYgcGItNSB4czEyPgogICAgICAgICAgPHYtY2FyZCBqdXN0aWZ5LWNlbnRlcj4KICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iaGVhZGxpbmUiCiAgICAgICAgICAgICAgPlNURVAgMjogU2VsZWN0IFlvdXIgUHJvamVjdCBNYW5hZ2VyCiAgICAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICA8di1jYXJkLXRleHQgY2xhc3M9InN1YmhlYWRpbmcgZ3JleS0tdGV4dCB0ZXh0LS1kYXJrZW4tMSI+CiAgICAgICAgICAgICAgQSBVU0EgYmFzZWQgcHJvamVjdCBtYW5hZ2VyIHdpbGwgaGVscCB5b3UgZGVmaW5lIHlvdXIgZGVsaXZlcmFibGVzIGFuZCBtYW5hZ2UgeW91ciBwcm9qZWN0IG9uIHlvdXIgYmVoYWxmIHdoaWxlIHdvcmtpbmcgd2l0aCBvdXIgaW50ZXJuYWwgdGVhbSBvZiB0b3AgZ2xvYmFsIHRhbGVudC4KICAgICAgICAgICAgICBZb3VyIGRlc2lnbmF0ZWQgcHJvamVjdCBtYW5hZ2VyIHdpbGwgd29yayB3aXRoIHlvdSBmb3IgdGhlIGxpZmV0aW1lIG9mIHRoZSBwcm9qZWN0LgogICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgPC92LWZsZXg+CiAgICAgICAgPHYtZmxleCBtZDYgeHMxMj4KICAgICAgICAgIDwhLS1zdXBwcmVzcyBIdG1sVW5rbm93blRhcmdldCAtLT4KICAgICAgICAgIDx2LWltZwogICAgICAgICAgICBhc3BlY3QtcmF0aW89IjEiCiAgICAgICAgICAgIGNvbnRhaW4KICAgICAgICAgICAgbWF4LWhlaWdodD0iMjYwcHgiCiAgICAgICAgICAgIHNyYz0iQC9hc3NldHMvdGVhbS10cmFpbmluZy1wb3Muc3ZnIgogICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgPC92LWZsZXg+CiAgICAgICAgPHYtZmxleCBtZDYgcGItNSB4czEyPgogICAgICAgICAgPHYtY2FyZCBqdXN0aWZ5LWNlbnRlcj4KICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iaGVhZGxpbmUiCiAgICAgICAgICAgICAgPlNURVAgMzogUHVyY2hhc2UgU3Vic2NyaXB0aW9uCiAgICAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICA8di1jYXJkLXRleHQgY2xhc3M9InN1YmhlYWRpbmcgZ3JleS0tdGV4dCB0ZXh0LS1kYXJrZW4tMSI+CiAgICAgICAgICAgICAgUHJvamVjdHMgYXJlIHBlcmZvcm1lZCBvbiAiVGltZSBhbmQgbWF0ZXJpYWxzIiBzdGFuZGFyZHMuIFlvdSBtdXN0IHB1cmNoYXNlIGEgc3Vic2NyaXB0aW9uIGFuZCAiYmxvY2sgb2YgdGltZSIuIEFueSB1bnVzZWQgYmxvY2tzIG9mIHRpbWUgYXJlIHJvbGxlZCBvdmVyIHRvIHRoZSBuZXh0IG1vbnRoLiBZb3VyIHN1YnNjcmlwdGlvbiBjb3ZlcnMgeW91ciBVU0EgYmFzZWQgcHJvamVjdCBtYW5hZ2VyIGFuZCBhY2Nlc3MgdG8gb3VyIG1hcmtldHBsYWNlLiBCbG9ja3Mgb2YgdGltZSBjb3ZlcnMgdGhlIGNvc3Qgb2YgdGhlIHByb2Zlc3Npb25hbHMgd29ya2luZyBvbiB5b3VyIHByb2plY3QuCiAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICA8L3YtZmxleD4KCiAgICAgICAgPHYtZmxleCBtZDYgeHMxMj4KICAgICAgICAgIDx2LWltZwogICAgICAgICAgICBhc3BlY3QtcmF0aW89IjEiCiAgICAgICAgICAgIGNvbnRhaW4KICAgICAgICAgICAgbWF4LWhlaWdodD0iMjYwcHgiCiAgICAgICAgICAgIHNyYz0iQC9hc3NldHMvY29uc3VsdGF0aW9uNC5zdmciCiAgICAgICAgICA+PC92LWltZz4KICAgICAgICA8L3YtZmxleD4KICAgICAgICA8di1mbGV4IG1kNiBwYi01IHhzMTI+CiAgICAgICAgICA8di1jYXJkIGp1c3RpZnktY2VudGVyPgogICAgICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJoZWFkbGluZSIKICAgICAgICAgICAgICA+U1RFUCA0OiBEZWZpbmUgWW91ciBQcm9qZWN0CiAgICAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICA8di1jYXJkLXRleHQgY2xhc3M9InN1YmhlYWRpbmcgZ3JleS0tdGV4dCB0ZXh0LS1kYXJrZW4tMSI+CiAgICAgICAgICAgICAgT3VyIFVTQSBwcm9qZWN0IG1hbmFnZXIgd2lsbCBhbmFseXplIHlvdXIgcmVxdWlyZW1lbnRzIGFuZCB3aWxsIHByb3ZpZGUgYW4gYWN0aW9uIHBsYW4gYmFzZWQgb24geW91ciBidWRnZXQuCiAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICA8L3YtZmxleD4KICAgICAgICA8di1mbGV4IG1kNiB4czEyPgogICAgICAgICAgPCEtLXN1cHByZXNzIEh0bWxVbmtub3duVGFyZ2V0LCBIdG1sVW5rbm93blRhcmdldCAtLT4KICAgICAgICAgIDx2LWltZwogICAgICAgICAgICBhc3BlY3QtcmF0aW89IjEiCiAgICAgICAgICAgIGNvbnRhaW4KICAgICAgICAgICAgbWF4LWhlaWdodD0iMjYwcHgiCiAgICAgICAgICAgIHNyYz0iQC9hc3NldHMvbW9jay10cmFpbmluZy5zdmciCiAgICAgICAgICA+PC92LWltZz4KICAgICAgICA8L3YtZmxleD4KICAgICAgICA8di1mbGV4IG1kNiBwYi01IHhzMTI+CiAgICAgICAgICA8di1jYXJkIGp1c3RpZnktY2VudGVyPgogICAgICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJoZWFkbGluZSIKICAgICAgICAgICAgICA+U1RFUCA1OiBVcGxvYWQgUHJvamVjdCBSZXF1aXJlbWVudHMKICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgIDx2LWNhcmQtdGV4dCBjbGFzcz0ic3ViaGVhZGluZyBncmV5LS10ZXh0IHRleHQtLWRhcmtlbi0xIj4KICAgICAgICAgICAgICBVcGxvYWQgeW91ciBmaWxlcywgZGlhZ3JhbXMsIGRpcmVjdGlvbnMsIGxvZ29zLCBhbmQgYW55IG90aGVyIHJlcXVpcmVkIGluZm9ybWF0aW9uIHRoYXQgbWF5YmUgbmVlZGVkIGZvciB5b3VyIHByb2plY3QuCiAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICA8L3YtZmxleD4KCiAgICAgICAgPHYtZmxleCBtZDYgeHMxMj4KICAgICAgICAgIDwhLS1zdXBwcmVzcyBIdG1sVW5rbm93blRhcmdldCwgSHRtbFVua25vd25UYXJnZXQgLS0+CiAgICAgICAgICA8di1pbWcKICAgICAgICAgICAgYXNwZWN0LXJhdGlvPSIxIgogICAgICAgICAgICBjb250YWluCiAgICAgICAgICAgIG1heC1oZWlnaHQ9IjI2MHB4IgogICAgICAgICAgICBzcmM9IkAvYXNzZXRzL21hcmtldGluZy1wb3MtY2xvdWQuc3ZnIgogICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgPC92LWZsZXg+CiAgICAgICAgPHYtZmxleCBtZDYgcGItNSB4czEyPgogICAgICAgICAgPHYtY2FyZCBqdXN0aWZ5LWNlbnRlcj4KICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iaGVhZGxpbmUiCiAgICAgICAgICAgICAgPlNURVAgNjogQXBwcm92ZSBUZXJtcyAmIE1pbGVzdG9uZXMKICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgIDx2LWNhcmQtdGV4dCBjbGFzcz0ic3ViaGVhZGluZyBncmV5LS10ZXh0IHRleHQtLWRhcmtlbi0xIj4KICAgICAgICAgICAgICBBZnRlciB5b3UgYXBwcm92ZSB0aGUgbWlsZXN0b25lcywgZGVsaXZlcmFibGVzIGFuZCBwcm9qZWN0IHRlcm1zLCB5b3VyIHByb2plY3QgbWFuYWdlciB0aGVuIHNjaGVkdWxlcyB5b3VyIHByb2plY3QgdG8gYmUgbGlzdGVkIG9uIHRoZSBtYXJrZXRwbGFjZS4KICAgICAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgIDwvdi1mbGV4PgoKICAgICAgICA8di1mbGV4IG1kNiB4czEyPgogICAgICAgICAgPHYtaW1nCiAgICAgICAgICAgIGFzcGVjdC1yYXRpbz0iMSIKICAgICAgICAgICAgY29udGFpbgogICAgICAgICAgICBtYXgtaGVpZ2h0PSIyNjBweCIKICAgICAgICAgICAgc3JjPSJAL2Fzc2V0cy9jb25zdWx0YXRpb244LnN2ZyIKICAgICAgICAgID48L3YtaW1nPgogICAgICAgIDwvdi1mbGV4PgogICAgICAgIDx2LWZsZXggbWQ2IHBiLTUgeHMxMj4KICAgICAgICAgIDx2LWNhcmQganVzdGlmeS1jZW50ZXI+CiAgICAgICAgICAgIDx2LWNhcmQtdGl0bGUgY2xhc3M9ImhlYWRsaW5lIgogICAgICAgICAgICAgID5TVEVQIDc6IFNpdCBCYWNrICYgUmVsYXgKICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgIDx2LWNhcmQtdGV4dCBjbGFzcz0ic3ViaGVhZGluZyBncmV5LS10ZXh0IHRleHQtLWRhcmtlbi0xIj4KICAgICAgICAgICAgICBZb3VyIHByb2plY3QgbWFuYWdlciB3aWxsIHdvcmsgb24geW91ciBiZWhhbGYgYW5kIGtlZXAgeW91IGluZm9ybWVkIG9uIHVwZGF0ZXMsIGNoYW5nZXMsIGFuZCBtaWxlc3RvbmVzIG9mIHlvdXIgcHJvamVjdC4KICAgICAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgIDwvdi1mbGV4PgogICAgICA8L3YtbGF5b3V0PgogICAgICA8di1sYXlvdXQgYWxpZ24tY2VudGVyIGNvbHVtbiBqdXN0aWZ5LWNlbnRlcj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LXhzLWNlbnRlciBwYi01IHB0LTUiPgogICAgICAgICAgPHJvdXRlci1saW5rIHRvPSIvc21hbGwtYnVzaW5lc3MtSVQtT25EZW1hbmQtRmFxIj4KICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgYXJpYS1sYWJlbD0iUmVzdGF1cmFudCBUZWNobm9sb2d5IgogICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgIGRhcmsKICAgICAgICAgICAgICByb3VuZGVkCiAgICAgICAgICAgID4KICAgICAgICAgICAgICBGcmVxdWVudGx5IEFza2VkIFF1ZXN0aW9ucwogICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgPC9yb3V0ZXItbGluaz4KICAgICAgICA8L2Rpdj4KICAgICAgPC92LWxheW91dD4KICAgIDwvdi1jb250YWluZXI+CiAgPC9kaXY+Cjwvc2VjdGlvbj4K"},null]}